"use strict";

var _react = _interopRequireDefault(require("react"));
var _enzyme = require("enzyme");
var _immutable = _interopRequireDefault(require("immutable"));
var _third_party_captcha = require("../../../field/captcha/third_party_captcha");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
var createLockMock = function createLockMock() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
    _ref$provider = _ref.provider,
    provider = _ref$provider === void 0 ? 'none' : _ref$provider,
    _ref$sitekey = _ref.sitekey,
    sitekey = _ref$sitekey === void 0 ? '' : _ref$sitekey;
  return _immutable.default.fromJS({
    id: '__lock-id__',
    core: {
      captcha: {
        provider: provider,
        sitekey: sitekey
      },
      transient: {
        ui: {
          language: 'en-US'
        }
      }
    }
  });
};
describe('Recaptcha v2', function () {
  it('should match the snapshot', function () {
    var mockLock = createLockMock({
      provider: 'recaptcha_v2',
      sitekey: 'mySiteKey'
    });
    var wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_third_party_captcha.ThirdPartyCaptcha, {
      provider: 'recaptcha_v2',
      lock: mockLock,
      sitekey: 'mySiteKey'
    }));
    expect(wrapper).toMatchSnapshot();
  });
  describe('render', function () {
    beforeAll(function () {
      document.body.innerHTML = "<div id='renderTest'></div>";
    });
    afterAll(function () {
      document.getElementById('renderTest').remove();
    });
    it('injects the script', function () {
      _third_party_captcha.ThirdPartyCaptcha.loadScript({
        hl: 'en-US',
        provider: 'recaptcha_v2'
      }, document.body);
      expect(document.body.innerHTML).toContain('<div id="renderTest">');
      expect(document.body.innerHTML).toContain('<script src="https://www.recaptcha.net/recaptcha/api.js?hl=en-US');
    });
  });
});
