"use strict";

var _web_api = _interopRequireDefault(require("../../core/web_api"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
describe('Auth0WebApi', function () {
  var originalWindow;
  var LOCK_ID = 'lock-id';
  var CLIENT_ID = 'client-id';
  var DEFAULT_DOMAIN = 'test.com';
  var client = function client() {
    return _web_api.default.clients[LOCK_ID];
  };
  beforeEach(function () {
    originalWindow = window.window;
  });
  afterEach(function () {
    window.window = originalWindow;
  });
  describe('setupClient', function () {
    it('sets the correct options when is on the hosted login page', function () {
      delete window.location;
      window.location = _objectSpread(_objectSpread({}, originalWindow.location), {}, {
        host: DEFAULT_DOMAIN,
        search: ''
      });
      _web_api.default.setupClient(LOCK_ID, CLIENT_ID, DEFAULT_DOMAIN, {
        redirect: true
      });
      expect(client()).toEqual(expect.objectContaining({
        isUniversalLogin: true,
        domain: DEFAULT_DOMAIN,
        authOpt: {
          popup: false
        }
      }));
    });
    it('sets redirect: true when on the same origin as the specified domain', function () {
      delete window.location;
      window.location = _objectSpread(_objectSpread({}, originalWindow.location), {}, {
        host: DEFAULT_DOMAIN,
        search: ''
      });
      _web_api.default.setupClient(LOCK_ID, CLIENT_ID, DEFAULT_DOMAIN, {});
      expect(client().authOpt.popup).toBe(false);
    });
    it('sets redirect: false when on a different origin as the specified domain', function () {
      delete window.location;
      window.location = _objectSpread(_objectSpread({}, originalWindow.location), {}, {
        host: 'test-other.com',
        search: ''
      });
      _web_api.default.setupClient(LOCK_ID, CLIENT_ID, DEFAULT_DOMAIN, {});
      expect(client().authOpt.popup).toBe(true);
    });
    it('forces popup and sso mode for cordova, only when not running in the hosted environment', function () {
      delete window.location;
      window.location = _objectSpread(_objectSpread({}, originalWindow.location), {}, {
        host: DEFAULT_DOMAIN,
        search: ''
      });
      window.cordova = true;
      _web_api.default.setupClient(LOCK_ID, CLIENT_ID, DEFAULT_DOMAIN, {});
      expect(client().authOpt.popup).toBe(false);
      expect(client().authOpt.sso).toBeUndefined();
    });
    it('forces popup and sso mode for electron, only when not running in the hosted environment', function () {
      delete window.location;
      window.location = _objectSpread(_objectSpread({}, originalWindow.location), {}, {
        host: DEFAULT_DOMAIN,
        search: ''
      });
      window.electron = true;
      _web_api.default.setupClient(LOCK_ID, CLIENT_ID, DEFAULT_DOMAIN, {});
      expect(client().authOpt.popup).toBe(false);
      expect(client().authOpt.sso).toBeUndefined();
    });
  });
});
