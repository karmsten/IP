"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _screen = _interopRequireDefault(require("../screen"));
var _quick_auth_pane = _interopRequireDefault(require("../../ui/pane/quick_auth_pane"));
var _actions = require("../../quick-auth/actions");
var _index = require("./index");
var l = _interopRequireWildcard(require("../index"));
var _signed_in_confirmation = require("../signed_in_confirmation");
var _index3 = require("../../connection/social/index");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
// TODO: handle this from CSS
function icon(strategy) {
  if (_index3.STRATEGIES[strategy]) return strategy;
  if (strategy === 'google-apps') return strategy;
  if (~['adfs', 'office365', 'waad'].indexOf(strategy)) return 'windows';
  return 'auth0';
}
var Component = function Component(_ref) {
  var i18n = _ref.i18n,
    model = _ref.model;
  var headerText = i18n.html('lastLoginInstructions') || null;
  var header = headerText && /*#__PURE__*/_react.default.createElement("p", null, headerText);
  var theme = (0, _index3.authButtonsTheme)(model);
  var connectionName = (0, _index.lastUsedConnection)(model).get('name');
  var buttonTheme = theme.get(connectionName);
  var primaryColor = buttonTheme && buttonTheme.get('primaryColor');
  var foregroundColor = buttonTheme && buttonTheme.get('foregroundColor');
  var buttonIcon = buttonTheme && buttonTheme.get('icon');
  var buttonClickHandler = function buttonClickHandler() {
    var isUniversalLogin = window.location.host === l.domain(model);
    if (isUniversalLogin) {
      (0, _actions.logIn)(l.id(model), (0, _index.lastUsedConnection)(model), (0, _index.lastUsedUsername)(model));
    } else {
      (0, _actions.checkSession)(l.id(model), (0, _index.lastUsedConnection)(model), (0, _index.lastUsedUsername)(model));
    }
  };
  var buttonLabel = (0, _index.lastUsedUsername)(model) || _index3.STRATEGIES[connectionName] || connectionName;
  return /*#__PURE__*/_react.default.createElement(_quick_auth_pane.default, {
    alternativeLabel: i18n.str('notYourAccountAction'),
    alternativeClickHandler: function alternativeClickHandler() {
      return (0, _actions.skipQuickAuth)(l.id(model));
    },
    buttonLabel: buttonLabel,
    buttonClickHandler: buttonClickHandler,
    header: header,
    strategy: icon((0, _index.lastUsedConnection)(model).get('strategy') || connectionName),
    buttonIcon: buttonIcon,
    primaryColor: primaryColor,
    foregroundColor: foregroundColor
  });
};
var LastLoginScreen = /*#__PURE__*/function (_Screen) {
  _inherits(LastLoginScreen, _Screen);
  var _super = _createSuper(LastLoginScreen);
  function LastLoginScreen() {
    _classCallCheck(this, LastLoginScreen);
    return _super.call(this, 'lastLogin');
  }
  _createClass(LastLoginScreen, [{
    key: "renderAuxiliaryPane",
    value: function renderAuxiliaryPane(lock) {
      return (0, _signed_in_confirmation.renderSignedInConfirmation)(lock);
    }
  }, {
    key: "render",
    value: function render() {
      return Component;
    }
  }]);
  return LastLoginScreen;
}(_screen.default);
exports.default = LastLoginScreen;
